---
export const prerender = true;
import { type CollectionEntry, getCollection } from "astro:content";
import UniCourseLayout from "../../layouts/UniCourseLayout.astro";
import Path from 'path'

export async function getStaticPaths() {
  const courses = await getCollection("course");
  return courses.map((course) => ({
    params: { slug: course.slug },
    props: course,
  }));
}
type Props = CollectionEntry<"course">;

const course = Astro.props;
const assignmentCollection = await getCollection("assignment");
let assignments = assignmentCollection.filter(
  (ass) => ass.data.course == course.data.initials
);

// sort assignemnts
assignments = assignments.sort((a, b) => {
  if (a.data.number > b.data.number) {
    return 1;
  } else if (b.data.number > a.data.number) {
    return -1;
  } else {
    return 0;
  }
});

const projFiles = await Astro.glob("../../content/project/*.md")
const projFile = projFiles.find((f)=> Path.parse(f.file).name == course.slug)
---

<UniCourseLayout
  CourseName={course.data.title}
  CourseInitials={course.data.initials}
  CourseFinalLink={projFile ? "/project/" + course.data.initials : ""}
>
  {assignments.length != 0 && <details slot="list">
    <summary
      ><h4 class="cursor-pointer text-center">Assignments (click to Open)</h4>
    </summary>
    <ol>
      {
        assignments.map((post) => {
          return (
            <a href={"/assignment/" + post.slug}>
              <li>{post.data.title}</li>
            </a>
          );
        })
      }
    </ol>
    <style>
      ol {
        list-style-type: None;
      }
    </style>
  </details>}
</UniCourseLayout>
<style>
  details summary::-webkit-details-marker {
    display: none;
  }
  ::marker {
    display: none;
  }
  summary {
    list-style: none;
  }
</style>
